
import React, { createContext, useContext, useState, ReactNode } from 'react';

export type Language = 'en' | 'ta' | 'hi' | 'de' | 'fr';

interface LanguageContextType {
  currentLanguage: Language;
  setLanguage: (language: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations: Record<Language, Record<string, string>> = {
  en: {
    'recipe.creator': 'Recipe Creator',
    'recipe.tagline': 'Transform your available ingredients into delicious, personalized recipes with the power of AI. Let\'s create something amazing together!',
    'recipe.generated': 'Recipe Generated! ЁЯН│',
    'recipe.ready': 'Your personalized recipe is ready to cook!',
    'recipe.error': 'Oops! Something went wrong',
    'recipe.error.desc': 'We couldn\'t generate your recipe. Please try again.',
    'recipe.create.another': 'Create Another Recipe',
    'recipe.footer': 'Crafted with тЭдя╕П for home cooks who love to create',
    'recipe.ingredients': 'Ingredients',
    'recipe.instructions': 'Instructions',
    'recipe.nutrition': 'Nutritional Information (per serving)',
    'recipe.nutrition.calories': 'Calories',
    'recipe.nutrition.protein': 'Protein',
    'recipe.nutrition.carbs': 'Carbs',
    'recipe.nutrition.fat': 'Fat',
    'recipe.tip': 'Tip',
    'bot.title': 'Ingredient Substitution Bot',
    'bot.placeholder': 'Ask about ingredient substitutions...',
    'bot.send': 'Send',
    'bot.example': 'Can I substitute butter with coconut oil in this recipe?'
  },
  ta: {
    'recipe.creator': 'роЪроорпИропро▓рпН роЙро░рпБро╡ро╛роХрпНроХро┐',
    'recipe.tagline': 'роЙроЩрпНроХро│рпН роХро┐роЯрпИроХрпНроХрпБроорпН рокрпКро░рпБроЯрпНроХро│рпИ AI ро╡ро▓ро┐роорпИропрпБроЯройрпН роЪрпБро╡рпИропро╛рой, родройро┐рокрпНрокроЯрпНроЯ роЪроорпИропро▓рпН роХрпБро▒ро┐рокрпНрокрпБроХро│ро╛роХ рооро╛ро▒рпНро▒рпБроЩрпНроХро│рпН. роТройрпНро▒ро╛роХ роЕро▒рпНрокрпБродрооро╛рой роТройрпНро▒рпИ роЙро░рпБро╡ро╛роХрпНроХрпБро╡рпЛроорпН!',
    'recipe.generated': 'роЪроорпИропро▓рпН роХрпБро▒ро┐рокрпНрокрпБ родропро╛ро░рпН! ЁЯН│',
    'recipe.ready': 'роЙроЩрпНроХро│рпН родройро┐рокрпНрокроЯрпНроЯ роЪроорпИропро▓рпН роХрпБро▒ро┐рокрпНрокрпБ роЪроорпИроХрпНроХ родропро╛ро░рпН!',
    'recipe.error': 'роЕроЯ! роПродрпЛ родро╡ро▒рпБ роироЯроирпНродродрпБ',
    'recipe.error.desc': 'роЙроЩрпНроХро│рпН роЪроорпИропро▓рпН роХрпБро▒ро┐рокрпНрокрпИ роЙро░рпБро╡ро╛роХрпНроХ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.',
    'recipe.create.another': 'рооро▒рпНро▒рпКро░рпБ роЪроорпИропро▓рпН роХрпБро▒ро┐рокрпНрокрпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН',
    'recipe.footer': 'роЪроорпИроХрпНроХ ро╡ро┐ро░рпБроорпНрокрпБроорпН ро╡рпАроЯрпНроЯрпБ роЪроорпИропро▓рпНроХро╛ро░ро░рпНроХро│рпБроХрпНроХро╛роХ тЭдя╕П роЙроЯройрпН ро╡роЯро┐ро╡роорпИроХрпНроХрокрпНрокроЯрпНроЯродрпБ',
    'recipe.ingredients': 'рокрпКро░рпБроЯрпНроХро│рпН',
    'recipe.instructions': 'ро╡ро┤ро┐роорпБро▒рпИроХро│рпН',
    'recipe.nutrition': 'роКроЯрпНроЯроЪрпНроЪродрпНродрпБ родроХро╡ро▓рпН (роТро░рпБ рокро░ро┐рооро╛ро▒рпБродро▓рпБроХрпНроХрпБ)',
    'recipe.nutrition.calories': 'роХро▓рпЛро░ро┐роХро│рпН',
    'recipe.nutrition.protein': 'рокрпБро░родроорпН',
    'recipe.nutrition.carbs': 'роХро╛ро░рпНрокрпЛро╣рпИроЯрпНро░рпЗроЯрпН',
    'recipe.nutrition.fat': 'роХрпКро┤рпБрокрпНрокрпБ',
    'recipe.tip': 'роХрпБро▒ро┐рокрпНрокрпБ',
    'bot.title': 'рокрпКро░рпБро│рпН рооро╛ро▒рпНро▒рпБ рокрпЛроЯрпН',
    'bot.placeholder': 'рокрпКро░рпБро│рпН рооро╛ро▒рпНро▒рпБроХро│рпН рокро▒рпНро▒ро┐ роХрпЗро│рпБроЩрпНроХро│рпН...',
    'bot.send': 'роЕройрпБрокрпНрокрпБ',
    'bot.example': 'роЗроирпНрод роЪроорпИропро▓ро┐ро▓рпН ро╡рпЖрогрпНрогрпЖропрпНроХрпНроХрпБ рокродро┐ро▓рпН родрпЗроЩрпНроХро╛ропрпН роОрогрпНрогрпЖропрпН рокропройрпНрокроЯрпБродрпНродро▓ро╛рооро╛?'
  },
  hi: {
    'recipe.creator': 'рд░реЗрд╕рд┐рдкреА рдХреНрд░рд┐рдПрдЯрд░',
    'recipe.tagline': 'AI рдХреА рд╢рдХреНрддрд┐ рд╕реЗ рдЕрдкрдиреА рдЙрдкрд▓рдмреНрдз рд╕рд╛рдордЧреНрд░рд┐рдпреЛрдВ рдХреЛ рд╕реНрд╡рд╛рджрд┐рд╖реНрдЯ, рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╡реНрдпрдВрдЬрдиреЛрдВ рдореЗрдВ рдмрджрд▓реЗрдВред рдЖрдЗрдП рдорд┐рд▓рдХрд░ рдХреБрдЫ рдЕрджреНрднреБрдд рдмрдирд╛рддреЗ рд╣реИрдВ!',
    'recipe.generated': 'рд░реЗрд╕рд┐рдкреА рддреИрдпрд╛рд░! ЁЯН│',
    'recipe.ready': 'рдЖрдкрдХреА рд╡реНрдпрдХреНрддрд┐рдЧрдд рд░реЗрд╕рд┐рдкреА рдкрдХрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИ!',
    'recipe.error': 'рдЕрд░реЗ! рдХреБрдЫ рдЧрд▓рдд рд╣реБрдЖ',
    'recipe.error.desc': 'рд╣рдо рдЖрдкрдХреА рд░реЗрд╕рд┐рдкреА рдирд╣реАрдВ рдмрдирд╛ рд╕рдХреЗред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред',
    'recipe.create.another': 'рдПрдХ рдФрд░ рд░реЗрд╕рд┐рдкреА рдмрдирд╛рдПрдВ',
    'recipe.footer': 'рдШрд░ рдХреЗ рдЦрд╛рдирд╛ рдмрдирд╛рдиреЗ рд╡рд╛рд▓реЛрдВ рдХреЗ рд▓рд┐рдП тЭдя╕П рд╕реЗ рддреИрдпрд╛рд░',
    'recipe.ingredients': 'рд╕рд╛рдордЧреНрд░реА',
    'recipe.instructions': 'рдирд┐рд░реНрджреЗрд╢',
    'recipe.nutrition': 'рдкреЛрд╖рдг рд╕рдВрдмрдВрдзреА рдЬрд╛рдирдХрд╛рд░реА (рдкреНрд░рддрд┐ рд╕рд░реНрд╡рд┐рдВрдЧ)',
    'recipe.nutrition.calories': 'рдХреИрд▓реЛрд░реА',
    'recipe.nutrition.protein': 'рдкреНрд░реЛрдЯреАрди',
    'recipe.nutrition.carbs': 'рдХрд╛рд░реНрдмреНрд╕',
    'recipe.nutrition.fat': 'рдлреИрдЯ',
    'recipe.tip': 'рдЯрд┐рдк',
    'bot.title': 'рд╕рд╛рдордЧреНрд░реА рд╡рд┐рдХрд▓реНрдк рдмреЙрдЯ',
    'bot.placeholder': 'рд╕рд╛рдордЧреНрд░реА рдХреЗ рд╡рд┐рдХрд▓реНрдк рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ...',
    'bot.send': 'рднреЗрдЬреЗрдВ',
    'bot.example': 'рдХреНрдпрд╛ рдореИрдВ рдЗрд╕ рд░реЗрд╕рд┐рдкреА рдореЗрдВ рдордХреНрдЦрди рдХреА рдЬрдЧрд╣ рдирд╛рд░рд┐рдпрд▓ рддреЗрд▓ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?'
  },
  de: {
    'recipe.creator': 'Rezept Creator',
    'recipe.tagline': 'Verwandeln Sie Ihre verf├╝gbaren Zutaten mit der Kraft der KI in k├╢stliche, personalisierte Rezepte. Lassen Sie uns gemeinsam etwas Gro├Яartiges schaffen!',
    'recipe.generated': 'Rezept erstellt! ЁЯН│',
    'recipe.ready': 'Ihr personalisiertes Rezept ist bereit zum Kochen!',
    'recipe.error': 'Ups! Etwas ist schief gelaufen',
    'recipe.error.desc': 'Wir konnten Ihr Rezept nicht erstellen. Bitte versuchen Sie es erneut.',
    'recipe.create.another': 'Ein weiteres Rezept erstellen',
    'recipe.footer': 'Mit тЭдя╕П f├╝r Hobbyk├╢che gemacht',
    'recipe.ingredients': 'Zutaten',
    'recipe.instructions': 'Anweisungen',
    'recipe.nutrition': 'N├дhrwertangaben (pro Portion)',
    'recipe.nutrition.calories': 'Kalorien',
    'recipe.nutrition.protein': 'Protein',
    'recipe.nutrition.carbs': 'Kohlenhydrate',
    'recipe.nutrition.fat': 'Fett',
    'recipe.tip': 'Tipp',
    'bot.title': 'Zutaten-Ersatz Bot',
    'bot.placeholder': 'Fragen Sie nach Zutaten-Alternativen...',
    'bot.send': 'Senden',
    'bot.example': 'Kann ich Butter durch Kokos├╢l in diesem Rezept ersetzen?'
  },
  fr: {
    'recipe.creator': 'Cr├йateur de Recettes',
    'recipe.tagline': 'Transformez vos ingr├йdients disponibles en d├йlicieuses recettes personnalis├йes avec le pouvoir de l\'IA. Cr├йons quelque chose d\'incroyable ensemble!',
    'recipe.generated': 'Recette g├йn├йr├йe! ЁЯН│',
    'recipe.ready': 'Votre recette personnalis├йe est pr├кte ├а cuisiner!',
    'recipe.error': 'Oups! Quelque chose s\'est mal pass├й',
    'recipe.error.desc': 'Nous n\'avons pas pu g├йn├йrer votre recette. Veuillez r├йessayer.',
    'recipe.create.another': 'Cr├йer une autre recette',
    'recipe.footer': 'Con├зu avec тЭдя╕П pour les cuisiniers passionn├йs',
    'recipe.ingredients': 'Ingr├йdients',
    'recipe.instructions': 'Instructions',
    'recipe.nutrition': 'Informations nutritionnelles (par portion)',
    'recipe.nutrition.calories': 'Calories',
    'recipe.nutrition.protein': 'Prot├йines',
    'recipe.nutrition.carbs': 'Glucides',
    'recipe.nutrition.fat': 'Lipides',
    'recipe.tip': 'Conseil',
    'bot.title': 'Bot de Substitution d\'Ingr├йdients',
    'bot.placeholder': 'Demandez des alternatives d\'ingr├йdients...',
    'bot.send': 'Envoyer',
    'bot.example': 'Puis-je remplacer le beurre par l\'huile de coco dans cette recette?'
  }
};

interface LanguageProviderProps {
  children: ReactNode;
}

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [currentLanguage, setCurrentLanguage] = useState<Language>('en');

  const setLanguage = (language: Language) => {
    setCurrentLanguage(language);
  };

  const t = (key: string): string => {
    return translations[currentLanguage][key] || key;
  };

  return (
    <LanguageContext.Provider value={{ currentLanguage, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
